function translatePageToPortuguese() {
  // T√≠tulos e descri√ß√µes principais
  document.getElementById("span1").textContent = "Presenteie seu";
  document.getElementById("span2").textContent = "Amor";
  document.querySelector("#title p").textContent =
    "Crie um site personalizado para o seu amor com um contador din√¢mico de tempo de relacionamento e mais recursos especiais!";
  document.getElementById("fillForm").textContent =
    "Preencha o formul√°rio e receba seu site personalizado + QR para compartilhar com o seu amor.";

  // Bot√µes de planos
  document.getElementById("oneyear").textContent =
    "1 Ano, 4 Fotos, Sem M√∫sica - R$ 16,49";
  document.getElementById("lifetime").textContent =
    "Para Sempre, 8 Fotos, Com M√∫sica - R$ 29,99";

  // Labels e campos do formul√°rio
  document.getElementById("namelabel").textContent = "Nome do Casal:";
  document.getElementById("nomecasal").placeholder =
    "Exemplo: Arthur e Joyce (sem emojis)";
  document.getElementById("datelabel").textContent =
    "In√≠cio do relacionamento:";
  document.getElementById("messagelabel").textContent = "Digite uma mensagem:";
  document.getElementById("message").placeholder =
    "Digite uma bela mensagem aqui!";
  document.getElementById("emailLabel").textContent =
    "Digite seu endere√ßo de e-mail:";
  document.getElementById("userEmail").placeholder = "voce@exemplo.com";
  document.getElementById("filelabel").textContent = "Envie suas fotos";
  document.getElementById("ratio").textContent =
    "Certifique-se de enviar fotos no formato retrato, n√£o paisagem, para obter os melhores resultados.";
  document.querySelector("#youtubeDiv label").textContent =
    "Digite uma m√∫sica do Youtube (Opcional):";

  // Placeholder da pr√©-visualiza√ß√£o
  document.getElementById("previewText").textContent = "Como vai ficar üëá";
  document.getElementById("headerTitle").textContent = "Nome do Casal";
  document.getElementById("timer").textContent = "Estamos juntos h√°:";
  document.getElementById("photoPlaceholderText").textContent = "Foto do Casal";
  document.getElementById("messageSecond").textContent =
    "Sua mensagem vai aparecer aqui!";

  // Bot√£o de envio
  document.getElementById("submitButton").textContent = "Criar Site";
  document.querySelector(".text").textContent = "Enviando para o Checkout";

  // Como funciona
  document.getElementById("howWorks").querySelector("h2").textContent =
    "Como Funciona?";
  const steps = document.querySelectorAll(".step p");
  steps[0].textContent = "1 - Insira as Informa√ß√µes üìã";
  steps[1].textContent = "2 - Complete o Pagamento üí∞";
  steps[2].textContent = "3 - Receba o Site + C√≥digo QR no Seu E-mail ‚úâÔ∏è";
  steps[3].textContent = "4 - Surpreenda Seu Amor ‚ù§Ô∏è";

  const stepsCelular = document.querySelectorAll(".stepCelular p");
  stepsCelular[0].textContent = "1 - Insira as Informa√ß√µes üìã";
  stepsCelular[1].textContent = "2 - Complete o Pagamento üí∞";
  stepsCelular[2].textContent =
    "3 - Receba o Site + C√≥digo QR no Seu E-mail ‚úâÔ∏è";
  stepsCelular[3].textContent = "4 - Surpreenda Seu Amor ‚ù§Ô∏è";

  // Se√ß√£o de FAQ
  document.querySelector("#faq h1").textContent = "Perguntas Frequentes (FAQ)";

  const faqItems = document.querySelectorAll(".faq-item");

  // Pergunta 1
  faqItems[0].querySelector("h2").textContent = "O que √© o ArtJoy?";
  faqItems[0].querySelector("p").textContent =
    "O ArtJoy √© uma plataforma que permite aos casais criarem p√°ginas personalizadas de relacionamento. Voc√™ pode adicionar fotos, uma mensagem especial e um contador ao vivo mostrando h√° quanto tempo est√£o juntos.";

  // Pergunta 2
  faqItems[1].querySelector("h2").textContent =
    "Como posso criar uma p√°gina personalizada no ArtJoy?";
  faqItems[1].querySelector("p").textContent =
    "Para criar uma p√°gina, preencha o formul√°rio com os nomes do casal, a data de in√≠cio do relacionamento, uma mensagem e at√© 8 fotos. Em seguida, clique no bot√£o 'Criar Site' e conclua o pagamento.";

  // Pergunta 3
  faqItems[2].querySelector("h2").textContent =
    "O que est√° inclu√≠do na minha p√°gina personalizada?";
  faqItems[2].querySelector("p").textContent =
    "Sua p√°gina contar√° com um contador ao vivo mostrando h√° quanto tempo est√£o juntos, uma apresenta√ß√£o de slides de fotos e uma declara√ß√£o personalizada. Al√©m disso, cora√ß√µes caem na tela com uma bela anima√ß√£o.";

  // Pergunta 4
  faqItems[3].querySelector("h2").textContent =
    "Como recebo minha p√°gina ap√≥s o pagamento?";
  faqItems[3].querySelector("p").textContent =
    "Ap√≥s o pagamento, voc√™ receber√° um c√≥digo QR para compartilhar com seu parceiro e um link via e-mail para acessar a p√°gina.";

  // Pergunta 5
  faqItems[4].querySelector("h2").textContent =
    "A p√°gina personalizada tem uma data de validade?";
  faqItems[4].querySelector("p").textContent =
    "No plano b√°sico, sim ‚Äì a p√°gina dura 1 ano. No plano avan√ßado, a p√°gina est√° dispon√≠vel para sempre.";

  // Pergunta 6
  faqItems[5].querySelector("h2").textContent =
    "Quanto custa criar uma p√°gina no ArtJoy?";
  faqItems[5].querySelector("p").textContent =
    "Atualmente, custa apenas R$ 16,49 para o plano b√°sico e R$ 29,99 para o plano avan√ßado.";

  // Pergunta 7
  faqItems[6].querySelector("h2").textContent =
    "Quanto tempo leva para receber o c√≥digo QR por e-mail?";
  faqItems[6].querySelector("p").textContent =
    "Pagamentos com cart√£o de cr√©dito e d√©bito s√£o processados instantaneamente.";

  // Pergunta 8
  faqItems[7].querySelector("h2").textContent =
    "Quais s√£o os m√©todos de pagamento aceitos?";
  faqItems[7].querySelector("p").textContent =
    "Aceitamos pagamentos via cart√£o de cr√©dito ou d√©bito.";

  // Pergunta 9
  faqItems[8].querySelector("h2").textContent =
    "Como posso entrar em contato com o suporte ao cliente?";
  faqItems[8].querySelector("p").textContent =
    "Voc√™ pode entrar em contato com nossa equipe de suporte atrav√©s do e-mail artjoy.app@gmail.com";

  // Bot√£o 'Create Website'
  document.querySelector(".backTop button").textContent = "Criar Site";

  // Rodap√©
  document.querySelector("footer p").textContent =
    "¬© 2024 ArtJoy. Todos os direitos reservados.";
  document.querySelector("footer p + p").textContent =
    "Usamos Stripe para pagamentos seguros. Suas informa√ß√µes est√£o seguras conosco!";

  document.querySelectorAll("footer a")[0].textContent =
    "Pol√≠tica de Privacidade";
  document.querySelectorAll("footer a")[1].textContent = "Termos de Servi√ßo";
}

// Fun√ß√£o para calcular a diferen√ßa entre a data atual e a data de in√≠cio
const dataInicio = document.getElementById("datainicio");

function updateTimer() {
  const [year, month, day] = dataInicio.value.split("-").map(Number);
  const startDate = new Date(year, month - 1, day);

  // Verifica se a data de in√≠cio foi definida
  if (isNaN(startDate.getTime())) {
    const timer = document.getElementById("timer");
    timer.textContent = "We've been together for:";
    return;
  }

  const now = new Date(); // Data e hora atuais
  const elapsed = now - startDate; // Diferen√ßa em milissegundos

  // Calcular total de segundos, minutos, horas e dias
  const totalSeconds = Math.floor(elapsed / 1000);
  const totalMinutes = Math.floor(totalSeconds / 60);
  const totalHours = Math.floor(totalMinutes / 60);
  const totalDays = Math.floor(totalHours / 24);

  // Calcular anos, meses e dias restantes
  const years = now.getFullYear() - startDate.getFullYear();

  let months = now.getMonth() - startDate.getMonth();
  if (months < 0) {
    months += 12; // Ajusta se o m√™s atual √© antes do m√™s de in√≠cio
  }

  let days = now.getDate() - startDate.getDate();
  if (days < 0) {
    months--; // Subtrai um m√™s se os dias n√£o foram completos
    // Ajuste de dias para o m√™s anterior
    const lastMonth = (now.getMonth() - 1 + 12) % 12;
    const lastMonthDays = new Date(
      now.getFullYear(),
      lastMonth + 1,
      0
    ).getDate();
    days += lastMonthDays; // Adiciona os dias do m√™s anterior
  }

  // Calcular horas, minutos e segundos restantes
  const displayHours = now.getHours() - startDate.getHours();
  const displayMinutes = now.getMinutes() - startDate.getMinutes();
  const displaySeconds = now.getSeconds() - startDate.getSeconds();

  // Ajustar horas, minutos e segundos
  if (displaySeconds < 0) {
    displaySeconds += 60;
    displayMinutes--;
  }
  if (displayMinutes < 0) {
    displayMinutes += 60;
    displayHours--;
  }
  if (displayHours < 0) {
    displayHours += 24;
  }

  // Atualiza o conte√∫do do elemento com o tempo decorrido
  let timerText = "We've been together for:<br>";

  // Mostrar "years" apenas se for maior que 0, e ajustar o plural
  if (years > 0) {
    timerText += `${years} ${years === 1 ? "year" : "years"}<br>`;
  }

  // Mostrar "months" apenas se for maior que 0, e ajustar o plural
  if (months > 0) {
    timerText += `${months} ${months === 1 ? "month" : "months"}<br>`;
  }

  // Mostrar "days" apenas se for maior que 0, e ajustar o plural
  if (days > 0) {
    timerText += `${days} ${days === 1 ? "day" : "days"}<br>`;
  }

  // Adicionar sempre horas, minutos e segundos
  timerText += `${displayHours} hours <br> ${displayMinutes} minutes <br>and ${displaySeconds} seconds`;

  // Atualiza o conte√∫do do elemento com o tempo decorrido
  document.getElementById("timer").innerHTML = timerText;
}

function updateTimerBr() {
  const [year, month, day] = dataInicio.value.split("-").map(Number);
  const startDate = new Date(year, month - 1, day);

  // Verifica se a data de in√≠cio foi definida
  if (isNaN(startDate.getTime())) {
    const timer = document.getElementById("timer");
    timer.textContent = "Estamos juntos h√°:";
    return;
  }

  const now = new Date(); // Data e hora atuais
  const elapsed = now - startDate; // Diferen√ßa em milissegundos

  // Calcular total de segundos, minutos, horas e dias
  const totalSeconds = Math.floor(elapsed / 1000);
  const totalMinutes = Math.floor(totalSeconds / 60);
  const totalHours = Math.floor(totalMinutes / 60);
  const totalDays = Math.floor(totalHours / 24);

  // Calcular anos, meses e dias restantes
  const years = now.getFullYear() - startDate.getFullYear();

  let months = now.getMonth() - startDate.getMonth();
  if (months < 0) {
    months += 12; // Ajusta se o m√™s atual √© antes do m√™s de in√≠cio
  }

  let days = now.getDate() - startDate.getDate();
  if (days < 0) {
    months--; // Subtrai um m√™s se os dias n√£o foram completos
    // Ajuste de dias para o m√™s anterior
    const lastMonth = (now.getMonth() - 1 + 12) % 12;
    const lastMonthDays = new Date(
      now.getFullYear(),
      lastMonth + 1,
      0
    ).getDate();
    days += lastMonthDays; // Adiciona os dias do m√™s anterior
  }

  // Calcular horas, minutos e segundos restantes
  const displayHours = now.getHours() - startDate.getHours();
  const displayMinutes = now.getMinutes() - startDate.getMinutes();
  const displaySeconds = now.getSeconds() - startDate.getSeconds();

  // Ajustar horas, minutos e segundos
  if (displaySeconds < 0) {
    displaySeconds += 60;
    displayMinutes--;
  }
  if (displayMinutes < 0) {
    displayMinutes += 60;
    displayHours--;
  }
  if (displayHours < 0) {
    displayHours += 24;
  }

  // Atualiza o conte√∫do do elemento com o tempo decorrido
  let timerText = "Estamos juntos h√°:<br>";

  // Mostrar "years" apenas se for maior que 0, e ajustar o plural
  if (years > 0) {
    timerText += `${years} ${years === 1 ? "ano" : "anos"}<br>`;
  }

  // Mostrar "months" apenas se for maior que 0, e ajustar o plural
  if (months > 0) {
    timerText += `${months} ${months === 1 ? "m√™s" : "meses"}<br>`;
  }

  // Mostrar "days" apenas se for maior que 0, e ajustar o plural
  if (days > 0) {
    timerText += `${days} ${days === 1 ? "dia" : "dias"}<br>`;
  }

  // Adicionar sempre horas, minutos e segundos
  timerText += `${displayHours} horas <br> ${displayMinutes} minutos <br>e ${displaySeconds} segundos`;

  // Atualiza o conte√∫do do elemento com o tempo decorrido
  document.getElementById("timer").innerHTML = timerText;
}

// document.addEventListener("DOMContentLoaded", function () {
//     async function fetchUserCountry() {
//       try {
//         // Faz a requisi√ß√£o √† rota do backend
//         const response = await fetch(
//           "https://api-artjoywebsite.vercel.app/api/get-country"
//         );
//         const data = await response.json();
  
//         // Verifica o pa√≠s e chama as fun√ß√µes correspondentes
//         if (data.country === "BR") {
//           translatePageToPortuguese();
//           // Se o pa√≠s for Brasil, usa updateTimerBr
//           setInterval(updateTimerBr, 1000);
//           dataInicio.addEventListener("input", updateTimerBr);
//         } else {
//           // Se n√£o for Brasil, usa updateTimer padr√£o
//           setInterval(updateTimer, 1000);
//           dataInicio.addEventListener("input", updateTimer);
//         }
//       } catch (error) {
//         console.error("Erro ao buscar o pa√≠s do usu√°rio:", error);
//         // Em caso de erro, voc√™ pode optar por um comportamento padr√£o
//         setInterval(updateTimer, 1000);
//         dataInicio.addEventListener("input", updateTimer);
//       }
//       console.log(data.country)
//     }
  
//     // Chama a fun√ß√£o ao carregar a p√°gina
//     fetchUserCountry();
//   });
translatePageToPortuguese();
// Se o pa√≠s for Brasil, usa updateTimerBr
setInterval(updateTimerBr, 1000);
dataInicio.addEventListener("input", updateTimerBr);